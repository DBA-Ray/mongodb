- name: Add replSetName
  lineinfile:
    path: /etc/mongod.conf
    regexp: "{{ item.regexp }}"
    line: "{{ item.line }}"
  with_items:
    - { regexp: '^#replication', line: 'replication:' }
    - { regexp: '^#replSetName', line: "  replSetName: {{ replsetname }}" }

- name: Restart mongodb server
  systemd:
    name: mongod
    state: restarted

#- name: Ensure replicaset exists
#  mongodb_replicaset:
#    login_host: localhost
#    login_user: root
#    login_password: "{{ root_password }}"
#    login_port: "{{ mongodb_port }}"
#    replica_set: "{{ replsetname }}"
    #chaining_allowed: yes
    #election_timeout_millis: 5000
#    members:
#    - "mongo1:{{ mongodb_port }}"
#    - "mongo2:{{ mongodb_port }}"
#    - "mongo3:{{ mongodb_port }}"
#  when: groups.mongoreplset.index(inventory_hostname) == 0

- name: Initiate replicaset
  shell: mongo -uroot -p'{{ root_password }}' --eval 'rs.initiate({_id:"{{ replsetname }}",members:[{_id:0,host:"mongo1:{{ mongodb_port }}",priority:30},{_id:1,host:"mongo2:{{ mongodb_port }}",priority:20},{_id:2,host:"mongo3:{{ mongodb_port }}",priority:10},{_id:3,host:"mongo4:{{ mongodb_port }}",arbiterOnly:true}]})'
  when: groups.mongoreplset.index(inventory_hostname) == 0

- name: Set the secondary node to be readable
  copy:
    src: .mongorc.js
    dest: /root/.mongorc.js
  when: groups.mongoreplset.index(inventory_hostname) != 0

- name: Create business database and user
  mongodb_user:
    login_host: localhost
    login_user: root
    login_password: "{{ root_password }}"
    login_port: "{{ mongodb_port }}"
    database: "{{ database }}"
    name: "{{ business_user }}"
    password: "{{ business_password }}"
    update_password: always
    replica_set: "{{ replsetname }}"
    roles: readWrite
    state: present
  when: groups.mongoreplset.index(inventory_hostname) == 0
